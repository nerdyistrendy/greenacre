{"version":3,"sources":["components/ProfileButton.js","components/Login.js","components/Hello.js","components/AddToListForm.js","components/Details.js","components/AutoComplete.js","components/Search.js","components/TableToolbarList.js","components/EnhancedTableList.js","components/List.js","App.js","reportWebVitals.js","index.js","components/AddUserDialog.js","components/GlobalFilter.js","components/TablePaginationActions.js","components/TableToolbar.js","components/EnhancedTable.js","components/PropertyList.js"],"names":["useStyles","makeStyles","theme","smallAvatar","width","spacing","height","ProfileButton","props","authenticated","profilePicture","IconButton","onClick","handleLogout","id","src","fontSize","Button","color","axios","defaults","headers","common","content","textAlign","marginTop","Login","classes","useState","loginError","setLoginError","authRequired","className","Typography","variant","gutterBottom","clientId","buttonText","onSuccess","d","a","formData","FormData","set","tokenObj","id_token","post","localStorage","setItem","JSON","stringify","profileObj","googleId","getLists","setAuthRequired","console","log","complete_auth","onFailure","cookiePolicy","redirectUri","scope","Snackbar","open","autoHideDuration","onClose","Alert","elevation","severity","to","Hello","name","setName","sub","setSub","useEffect","get","r","data","google_id","response","status","fetchData","style","Field","label","rest","htmlFor","AddToListForm","form","useForm","defaultValues","list","onSubmit","values","addPropertyToList","currentUser","currentProperty","address","ref","parse","getItem","map","index","value","type","override","css","Details","loading","properties","photos","alt","size","meta","tracking_params","mprId","listingPrice","displayType","thousandSeparator","prefix","description","currentUserLists","AutoComplete","handleChange","setState","onFormSubmit","event","preventDefault","searchPropertyById","state","this","onChange","onSelect","handleSelect","getInputProps","suggestions","getSuggestionItemProps","placeholder","suggestion","i","active","backgroundColor","cursor","Component","Search","searchTerm","formFields","setFormFields","target","useToolbarStyles","root","paddingLeft","paddingRight","highlight","palette","secondary","main","lighten","light","text","primary","title","flex","TableToolbarList","numSelected","addUserHandler","deleteUserHandler","preGlobalFilteredRows","setGlobalFilter","globalFilter","Toolbar","clsx","AddUserDialog","background","Tooltip","aria-label","GlobalFilter","IndeterminateCheckbox","React","forwardRef","indeterminate","defaultRef","useRef","resolvedRef","current","Checkbox","defaultColumn","EnhancedTableList","columns","setData","updateMyData","skipPageReset","useTable","autoResetPage","useGlobalFilter","useSortBy","usePagination","useRowSelect","hooks","allColumns","push","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","headerGroups","prepareRow","page","gotoPage","setPageSize","selectedRowIds","pageIndex","pageSize","TableContainer","Object","keys","length","x","then","array","indexs","newData","parseInt","filter","_","includes","user","concat","TableHead","headerGroup","TableRow","getHeaderGroupProps","column","TableCell","getHeaderProps","getSortByToggleProps","render","TableSortLabel","isSorted","direction","isSortedDesc","TableBody","getRowProps","cells","cell","getCellProps","original","listId","List","lists","listsLength","listObjects","listName","useMemo","accessor","setSkipPageReset","CssBaseline","rowIndex","columnId","old","API_URL_BASE","flexGrow","ProtectedRoute","children","App","setErrorMessage","currentPropertyId","setCurrentPropertyId","setCurrentProperty","setCurrentUser","setCurrentUserLists","setProfilePicture","logoutError","showLogoutError","anchorEl","setAnchorEl","Boolean","handleClose","picture","results","catch","error","message","AppBar","position","delete","result","do_logout","edge","menuButton","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","TransitionComponent","Fade","MenuItem","path","component","PropertyList","currentList","currentAddress","alert","process","REACT_APP_GOOGLE_CLIENT_ID","elevated","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","initialUser","subRows","undefined","setUser","setOpen","addMultiple","switchState","setSwitchState","aria-labelledby","autoFocus","margin","fullWidth","search","borderRadius","shape","fade","white","marginRight","marginLeft","breakpoints","up","searchIcon","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","count","e","input","inputProps","flexShrink","TablePaginationActions","useTheme","rowsPerPage","onChangePage","disabled","Math","ceil","max","TableToolbar","inputStyle","border","initialValue","setValue","onBlur","EnhancedTable","TableFooter","TablePagination","rowsPerPageOptions","colSpan","SelectProps","native","newPage","onChangeRowsPerPage","Number","ActionsComponent","useParams","isLoaded","setIsLoaded","p_list","eval","pr_list","p","thumbnail","listing_status","property_type","details","price","property_id","rent","capRatio","note","monthly_payment","capRatio2530","CAP","toFixed","CAP2530","respontse"],"mappings":"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","file":"static/js/main.a43ef870.chunk.js","sourcesContent":["import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nconst useStyles = makeStyles(theme => ({\n    smallAvatar: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n    },\n}));\n\n\nexport function ProfileButton(props) {\n    const classes = useStyles();\n\n    if (props.authenticated) {\n        return (\n            props.profilePicture ? (\n                <IconButton onClick={props.handleLogout} id=\"ib\">\n                    <ExitToAppIcon src={props.profilePicture} fontSize = \"large\"/>\n                </IconButton>\n            ) : (\n                <Button onClick={props.handleLogout} color=\"inherit\">\n                    Logout\n                </Button>\n            )\n        );\n    } else {\n        return <> </>;\n    }\n}","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport axios from 'axios';\nconst clientId =\n  '682392515702-8073lsudamcf05clhsl95fv6f1r9636i.apps.googleusercontent.com';\n\n  axios.defaults.headers.common['X-Requested-With'] = 'XmlHttpRequest'\n\n  const API_URL_BASE = '/'\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        textAlign: \"center\",\n        marginTop: 40,\n    },\n}));\n\nexport function Login(props) {\n    const classes = useStyles();\n    const [loginError, setLoginError] = useState(false);\n\n    function loginSuccess(d) {\n        // Log into backend with the ID token as credential:\n        console.log(\"success\")\n\n        async function complete_auth() {\n            var formData = new FormData();\n            formData.set(\"id_token\", d.tokenObj.id_token);\n            try {\n                await axios.post(`${API_URL_BASE}me`, formData);\n                localStorage.setItem('currentUserIDLocalStorage', JSON.stringify(d.profileObj.googleId))\n                \n                props.getLists()\n                props.setAuthRequired(false);\n            } catch(e) {\n                setLoginError(true);\n            }\n        }\n\n        complete_auth();\n    };\n    function loginFailure(d) {\n        console.log(d)\n        setLoginError(true);\n    };\n\n    // Redirect if authentication is done:\n    if (!props.authRequired)\n        return <Redirect to=\"/\" />;\n\n    return (\n        <div className={classes.content}>\n            <Typography\n                variant=\"h5\"\n                gutterBottom={true}\n                >Please log in</Typography>\n            <GoogleLogin\n                clientId={clientId}\n                buttonText=\"Log in with Google\"\n                onSuccess={loginSuccess}\n                onFailure={loginFailure}\n                cookiePolicy={\"single_host_origin\"}\n                redirectUri=\"postmessage\"\n                scope=\"openid\"\n            />\n            <Snackbar open={loginError} autoHideDuration={10000} onClose={() => setLoginError(false)}>\n                <Alert elevation={6} severity=\"error\" >Error logging in</Alert>\n            </Snackbar>\n        </div>\n    );\n};","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {\n  BrowserRouter as Router,\n  HashRouter,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport \"./Hello.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    textAlign: \"center\",\n    marginTop: 40,\n  },\n}));\nconst API_URL_BASE = \"/\";\n\nexport function Hello(props) {\n  const [name, setName] = useState(\"\");\n  const [sub, setSub] = useState(\"\");\n  const classes = useStyles();\n  const [authRequired, setAuthRequired] = [\n    props.authRequired,\n    props.setAuthRequired,\n  ];\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const r = await axios.get(`${API_URL_BASE}me`);\n        //r{'google_id': current_user.id,\n        // 'name': current_user.name,\n        // 'picture': current_user.profile_pic}\n        setName(r.data.name);\n        setSub(r.data.google_id);\n        \n      } catch (e) {\n        console.log(e);\n        if (e.response) {\n          if (e.response.status === 401) {\n            setAuthRequired(true);\n          }\n        }\n      }\n    }\n\n    fetchData();\n  }, [authRequired, setAuthRequired]);\n\n  if (name && sub)\n    return (\n      <div className={classes.content}>\n        <p className=\"welcome\">Welcome, {name}</p>\n        <Typography variant=\"body1\">Google subscriber ID: {sub}.</Typography>\n        <section className=\"icons\">\n        <p><Link to=\"/list\" ><ListAltIcon style={{ fontSize: 50 }}/></Link></p>\n        <p><Link to=\"/Autocomplete\" ><SearchIcon style={{ fontSize: 50 }}/></Link></p>\n        </section>\n      </div>\n    );\n  else\n    return (\n      <div className={classes.content}>\n        <Typography variant=\"h5\">Loading...</Typography>\n      </div>\n    );\n}\nexport default Hello;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { useForm } from \"react-cool-form\";\nimport \"./AddToListForm.css\";\nimport \"./styles.scss\";\n\nconst Field = ({ label, id, ...rest }) => (\n  <>\n    <input id={id} {...rest} />\n    <label htmlFor={id}>{label}</label>\n  </>\n);\n\nconst AddToListForm = (props) => {\n  const { form } = useForm({\n    defaultValues: { list: \"favorite\" },\n    onSubmit: (values) => props.addPropertyToList(props.currentUser, values.list, props.currentProperty, props.address)\n    \n\n    // onSubmit: (values) =>\n    // props.addPropertyToList(props.currentUser, values, props.currentProperty),\n    // (values) => console.log(\"onSubmit: \", values),\n    // props.addPropertyToList(props.currentUser, values.list, props.currentProperty)\n    // onSubmit: (e) => alert(e.key),\n    // onSubmit: (values) => console.log(JSON.stringify(values)),\n  });\n  \n\n  return (\n    <form ref={form}>\n      <fieldset>\n        <legend>Add to List</legend>\n        {(JSON.parse(localStorage.getItem('currentListsLocalStorage'))[0]||[]).map(function (list, index) {\n          return (\n            <Field\n              key={index}\n              label={list}\n              id={list}\n              name=\"list\"\n              value={list}\n              type=\"radio\"\n            />\n          );\n        })}\n      </fieldset>\n      <input type=\"submit\" />\n    </form>\n  );\n};\n\nexport default AddToListForm;\n","import React, { useState } from \"react\";\nimport AddToListForm from \"./AddToListForm\"\nimport CurrencyFormat from 'react-currency-format';\nimport { css } from \"@emotion/core\";\nimport PacmanLoader from \"react-spinners/ClipLoader\";\nimport \"./Details.css\";\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\nconst Details = (props) => {\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"#ffffff\");\n  return (\n    <div className='container'>\n      <ul className='flex-item'>\n      <li>\n          {props.currentProperty\n            ? <img src={props.currentProperty.properties[0].photos[0][\"href\"]} alt=\"thumbnail\" width = '90%' />\n            : <PacmanLoader color={color} loading={loading} css={override} size={150} />}\n        </li>\n        <li>\n          {props.currentProperty\n            ? props.currentProperty.meta.tracking_params.mprId\n            : \"\"}\n        </li>\n        <li>{props.currentProperty ? props.address : \"\"}</li>\n        <li>\n          {props.currentProperty\n            ? <CurrencyFormat value={props.currentProperty.meta.tracking_params.listingPrice} displayType={'text'} thousandSeparator={true} prefix={'$'} />            \n            : \"\"}\n        </li>\n        <li>\n          {props.currentProperty\n            ? props.currentProperty.properties[0].description\n            : \"\"}\n        </li>\n        <li>{props.currentProperty\n            ? <AddToListForm currentProperty={props.currentProperty} currentUser={props.currentUser} currentUserLists={props.currentUserLists} addPropertyToList={props.addPropertyToList} getLists={props.getLists} address={props.address}/>\n            : \"\"}</li>  \n      </ul>\n\n    </div>\n  );\n};\n\nexport default Details;\n","import React, { Component } from \"react\";\nimport PlacesAutocomplete from \"react-places-autocomplete\";\nimport Details from \"./Details\";\nimport \"./styles.scss\";\n\nimport \"./AutoComplete.scss\";\nexport class AutoComplete extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: \"\" };\n  }\n\n  handleChange = (address) => {\n    this.setState({ address });\n  };\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    // this.props.getPropertyId(this.state.address)\n    this.props.searchPropertyById(this.state.address);\n\n    this.setState({ address: '' });\n  };\n\n  render() {\n    return (\n      <div>\n        <PlacesAutocomplete\n          value={this.state.address}\n          onChange={this.handleChange}\n          onSelect={this.handleSelect}\n        >\n          {({\n            getInputProps,\n            suggestions,\n            getSuggestionItemProps,\n            loading,\n          }) => (\n            <form onSubmit={this.onFormSubmit}>\n              <input\n                {...getInputProps({\n                  placeholder: \"Enter Address\",\n                  className: \"location-search-input\",\n                })}\n              />\n              <input type=\"submit\" name=\"Submit\" />\n              <div className=\"autocomplete-dropdown-container\">\n                {loading && <div>Loading...</div>}\n                {suggestions.map((suggestion, i) => {\n                  // inline style for demonstration purpose\n                  const style = suggestion.active\n                    ? { backgroundColor: \"#42a5f5\", cursor: \"pointer\" }\n                    : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                  return (\n                    <div\n                      key={i}\n                      className=\"input-suggestion\"\n                      {...getSuggestionItemProps(suggestion, {\n                        style,\n                      })}\n                    >\n                      <i className=\"material-icons\"> </i>{\" \"}\n                      <span>{suggestion.description}</span>\n                    </div>\n                  );\n                })}\n              </div>\n              {/* <Search currentProperty={this.props.currentProperty} /> */}\n            </form>\n          )}\n        </PlacesAutocomplete>\n        <Details \n          currentProperty={this.props.currentProperty}\n          address={this.state.address}\n          currentUser={this.props.currentUser}\n          currentUserLists={this.props.currentUserLists}\n          addPropertyToList={this.props.addPropertyToList}\n          getLists={this.props.getLists} \n        />\n      </div>\n    );\n  }\n}\n\nexport default AutoComplete;\n","import React, { useState } from 'react';\nimport Details from './Details';\nimport AutoComplete from './AutoComplete';\nimport \"./styles.scss\";\n\nconst Search = (props) => {\n  const [formFields, setFormFields] = useState({\n    searchTerm: '',\n  });\n\n  const onInputChange = (event) => {\n    setFormFields({searchTerm: event.target.value});\n    };\n\n    const onFormSubmit = (event) => {\n      event.preventDefault();\n  \n      props.searchPropertyById(formFields.searchTerm);\n  \n      setFormFields({\n        searchTerm: '',\n      });\n    };\n\n  return (\n    <div>\n      <form onSubmit={onFormSubmit} ><div>\n        <h1>SEARCH BY ADDRESS</h1>\n        <label htmlFor=\"searchTerm\"></label></div>\n        <input className='search-bar'\n          name=\"searchTerm\"\n          id=\"searchTerm\"\n          onChange={onInputChange}\n          value={formFields.searchTerm}\n          placeholder=\"Enter Address\"\n        />\n      <input \n        type=\"submit\"\n        name=\"Submit\"\n      />\n      <Details className='container' currentProperty={props.currentProperty} />\n      {/* <Autocomplete currentProperty={props.currentProperty} /> */}\n\n      </form>\n    </div>\n  )\n}\n\nexport default Search;","import React from 'react'\n\nimport AddUserDialog from './AddUserDialog'\nimport clsx from 'clsx'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport GlobalFilter from './GlobalFilter'\nimport IconButton from '@material-ui/core/IconButton'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { Link, BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: \"#d0e4b9\"\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}))\n\nconst TableToolbarList = props => {\n  const classes = useToolbarStyles()\n  const {\n    numSelected,\n    addUserHandler,\n    deleteUserHandler,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    globalFilter,\n  } = props\n  return (\n    <Toolbar \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      <h3> Lists </h3>\n      <AddUserDialog addUserHandler={addUserHandler} getLists={props.getLists}/>\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          style={{ background: \"#d0e4b9\" }}\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\" onClick={deleteUserHandler}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <GlobalFilter\n          preGlobalFilteredRows={preGlobalFilteredRows}\n          globalFilter={globalFilter}\n          setGlobalFilter={setGlobalFilter}\n        />\n      )}\n    </Toolbar>\n  )\n}\n\nTableToolbarList.propTypes = {\n  // numSelected: PropTypes.number.isRequired,\n  // addUserHandler: PropTypes.func.isRequired,\n  // deleteUserHandler: PropTypes.func.isRequired,\n  // setGlobalFilter: PropTypes.func.isRequired,\n  // preGlobalFilteredRows: PropTypes.array.isRequired,\n  // globalFilter: PropTypes.string.isRequired,\n}\n\nexport default TableToolbarList\n","import React from \"react\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MaUTable from \"@material-ui/core/Table\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TablePaginationActions from \"./TablePaginationActions\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport TableToolbarList from \"./TableToolbarList\";\nimport {\n  BrowserRouter as Router,\n  HashRouter,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport {\n  useGlobalFilter,\n  usePagination,\n  useRowSelect,\n  useSortBy,\n  useTable,\n} from \"react-table\";\n\nimport axios from \"axios\";\n\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <>\n        <Checkbox ref={resolvedRef} {...rest} style={{ color: \"#8bc34a\" }} />\n      </>\n    );\n  }\n);\n\nconst inputStyle = {\n  padding: 0,\n  margin: 0,\n  border: 0,\n  background: \"transparent\",\n};\n\n// Create an editable cell renderer\nconst EditableCell = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  updateMyData, // This is a custom function that we supplied to our table instance\n}) => {\n  // We need to keep and update the state of the cell normally\n  const [value, setValue] = React.useState(initialValue);\n\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  // We'll only update the external data when the input is blurred\n  const onBlur = () => {\n    updateMyData(index, id, value);\n  };\n\n  // If the initialValue is changed externall, sync it up with our state\n  React.useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  return (\n    <input\n      style={inputStyle}\n      value={value}\n      onChange={onChange}\n      onBlur={onBlur}\n    />\n  );\n};\n\nEditableCell.propTypes = {\n  cell: PropTypes.shape({\n    value: PropTypes.any.isRequired,\n  }),\n  row: PropTypes.shape({\n    index: PropTypes.number.isRequired,\n  }),\n  column: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }),\n  updateMyData: PropTypes.func.isRequired,\n};\n\n// Set our editable cell renderer as the default Cell renderer\nconst defaultColumn = {\n  // Cell: EditableCell,\n};\n\nconst EnhancedTableList = ({\n  columns,\n  data,\n  setData,\n  updateMyData,\n  skipPageReset,\n  getLists,\n}) => {\n  const {\n    getTableProps,\n    headerGroups,\n    prepareRow,\n    page,\n    gotoPage,\n    setPageSize,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    state: { pageIndex, pageSize, selectedRowIds, globalFilter },\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      autoResetPage: !skipPageReset,\n      // updateMyData isn't part of the API, but\n      // anything we put into these options will\n      // automatically be available on the instance.\n      // That way we can call this function from our\n      // cell renderer!\n      updateMyData,\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    (hooks) => {\n      hooks.allColumns.push((columns) => [\n        // Let's make a column for selection\n        {\n          id: \"selection\",\n          // The header can use the table's getToggleAllRowsSelectedProps method\n          // to render a checkbox.  Pagination is a problem since this will select all\n          // rows even though not all rows are on the current page.  The solution should\n          // be server side pagination.  For one, the clients should not download all\n          // rows in most cases.  The client should only download data for the current page.\n          // In that case, getToggleAllRowsSelectedProps works fine.\n          Header: ({ getToggleAllRowsSelectedProps }) => (\n            <div>\n              <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n            </div>\n          ),\n          // The cell can use the individual row's getToggleRowSelectedProps method\n          // to the render a checkbox\n          Cell: ({ row }) => (\n            <div>\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n            </div>\n          ),\n        },\n        ...columns,\n      ]);\n    }\n  );\n\n  const handleChangePage = (event, newPage) => {\n    gotoPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setPageSize(Number(event.target.value));\n  };\n\n  const removeByIndexs = (array, indexs) =>\n    array.filter((_, i) => !indexs.includes(i));\n\n  const deleteUserHandler = (event) => {\n    // delete a list in investment_lists\n    // \"/delete/<investor_id>/<list_name>\"\n    Object.keys(selectedRowIds).map((x) =>\n      axios.post(\n        `/delete/${JSON.parse(\n          localStorage.getItem(\"currentUserIDLocalStorage\")\n        )}/${data[x][\"listName\"]}`\n      )    \n      .then(function (response) {\n        getLists();    \n      })\n      \n    );\n\n    const newData = removeByIndexs(\n      data,\n      Object.keys(selectedRowIds).map((x) => parseInt(x, 10))\n    );\n    setData(newData);\n  };\n\n  const addUserHandler = (user) => {\n    const newData = data.concat([user]);\n    setData(newData);\n  };\n\n  // Render the UI for your table\n  return (\n    <TableContainer>\n      <TableToolbarList\n        numSelected={Object.keys(selectedRowIds).length}\n        deleteUserHandler={deleteUserHandler}\n        addUserHandler={addUserHandler}\n        preGlobalFilteredRows={preGlobalFilteredRows}\n        setGlobalFilter={setGlobalFilter}\n        globalFilter={globalFilter}\n        getLists={getLists}\n      />\n      <MaUTable {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <TableCell\n                  {...(column.id === \"selection\"\n                    ? column.getHeaderProps()\n                    : column.getHeaderProps(column.getSortByToggleProps()))}\n                >\n                  {column.render(\"Header\")}\n                  {column.id !== \"selection\" ? (\n                    <TableSortLabel\n                      active={column.isSorted}\n                      // react-table has a unsorted state which is not treated here\n                      direction={column.isSortedDesc ? \"desc\" : \"asc\"}\n                    />\n                  ) : null}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableHead>\n        <TableBody>\n          {page.map((row, i) => {\n            prepareRow(row);\n            return (\n              <TableRow {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <TableCell {...cell.getCellProps()}>\n                      {cell.column.id !== \"selection\" ? (\n                        <Link to={`/list/${cell.row.original.listId}`}>\n                          {cell.render(\"Cell\")}\n                        </Link>\n                      ) : (\n                        cell.render(\"Cell\")\n                      )}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n\n        {/* <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[\n                5,\n                10,\n                25,\n                { label: 'All', value: data.length },\n              ]}\n              colSpan={3}\n              count={data.length}\n              rowsPerPage={pageSize}\n              page={pageIndex}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter> */}\n      </MaUTable>\n    </TableContainer>\n  );\n};\n\nEnhancedTableList.propTypes = {\n  // columns: PropTypes.array.isRequired,\n  // data: PropTypes.array.isRequired,\n  // updateMyData: PropTypes.func.isRequired,\n  // setData: PropTypes.func.isRequired,\n  // skipPageReset: PropTypes.bool.isRequired,\n};\n\nexport default EnhancedTableList;\n","import React, { useState, useEffect  } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport EnhancedTableList from \"./EnhancedTableList\";\nimport axios from \"axios\";\nimport \"./List.scss\";\n\nconst List = (props) => {\n  const lists = JSON.parse(localStorage.getItem('currentListsLocalStorage')||[])\n  // console.log(lists)\n  const listsLength = lists[0].length\n\n  const listObjects = []\n  for (let i = 0; i < listsLength ; i++) {   \n    listObjects.push( {\n      listName: lists[0][i],\n      listId:lists[1][i],\n      // action: \"Delete\"\n      })  \n  }\n\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'List Name',\n        accessor: 'listName',\n      },\n      // {\n      //   Header: 'Action',\n      //   accessor: 'action',\n      // },\n    ],\n    []\n  )\n  \n\n  const [data, setData] = React.useState(React.useMemo(() => listObjects, []))\n  const [skipPageReset, setSkipPageReset] = React.useState(false)\n\n  // We need to keep the table from resetting the pageIndex when we\n  // Update data. So we can keep track of that flag with a ref.\n\n  // When our cell renderer calls updateMyData, we'll use\n  // the rowIndex, columnId and new value to update the\n  // original data\n  const updateMyData = (rowIndex, columnId, value) => {\n    // We also turn on the flag to not reset the page\n    setSkipPageReset(true)\n    setData(old =>\n      old.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...old[rowIndex],\n            [columnId]: value,\n          }\n        }\n        return row\n      })\n    )\n  }\n\n  return (\n    <div>\n      <CssBaseline />\n      <EnhancedTableList\n        columns={columns}\n        data={data}\n        setData={setData}\n        updateMyData={updateMyData}\n        skipPageReset={skipPageReset}\n        getLists={props.getLists}\n      />\n    </div>\n  )\n}\n\nexport default List;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  HashRouter,\n  Switch,\n  Route,\n  Link,\n  \n} from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\n/* Material UI imports */\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  CssBaseline,\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  MenuItem,\n  Snackbar,\n  Button,\n  Menu,\n  Fade,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { ProfileButton } from \"./components/ProfileButton\";\nimport { Login } from \"./components/Login\";\nimport { Hello } from \"./components/Hello\";\nimport AddToListForm from \"./components/AddToListForm\";\nimport Search from \"./components/Search\";\nimport List from \"./components/List\";\nimport AutoComplete from \"./components/AutoComplete\";\nimport Details from \"./components/Details\";\nimport PropertyList from './components/PropertyList';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nimport \"./App.css\";\n\nconst API_URL_BASE = \"/\";\n\nconst clientId =\n  \"682392515702-8073lsudamcf05clhsl95fv6f1r9636i.apps.googleusercontent.com\";\naxios.defaults.headers.common[\"X-Requested-With\"] = \"XmlHttpRequest\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst ProtectedRoute = ({ children, authRequired, ...rest }) => {\n  return (\n    <Route {...rest}>\n      {!authRequired ? children : <Redirect to=\"/login\" />}\n    </Route>\n  );\n};\nconst App = () => {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [currentPropertyId, setCurrentPropertyId] = useState(null);\n  const [currentProperty, setCurrentProperty] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [currentUserLists, setCurrentUserLists] = useState([]);\n\n  const classes = useStyles();\n\n  /* Is authentication required? */\n  const [authRequired, setAuthRequired] = useState(false);\n  const [profilePicture, setProfilePicture] = useState(null);\n  const [logoutError, showLogoutError] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  /* For logout  */\n  function handleLogout() {\n    async function do_logout() {\n      try {\n        const result = await axios.delete(`${API_URL_BASE}me`);\n        if (result.status === 200 || result.status === 204) {\n          setAuthRequired(true);\n\n        }\n      } catch (e) {\n        showLogoutError(true);\n      }\n    }\n    do_logout();\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      if (!authRequired) {\n        try {\n          const r = await axios.get(`${API_URL_BASE}me`);\n          setProfilePicture(r.data.picture);\n          setCurrentUser(r.data)\n          // localStorage.setItem('currentCurrentLocalStorage', JSON.stringify(r.data))\n          // getLists()\n        } catch (e) {\n          if (e.response) {\n            if (e.response.status === 401) {\n              setAuthRequired(true);\n            }\n          }\n        }\n      } else {\n        setProfilePicture(null);\n      }\n    }\n    fetchData();\n  }, [authRequired]);\n\n  const searchPropertyById = (address) => {\n    axios\n      .get(`${API_URL_BASE}id/${address}`)\n      .then((response) => {\n        const results = response.data[\"autocomplete\"][0][\"mpr_id\"];\n        setCurrentPropertyId(results);\n        console.log(results);\n        return results;\n      })\n      .then((response) => {\n        axios.get(`${API_URL_BASE}details/${response}`).then((response) => {\n          const results = response.data;\n          setCurrentProperty(results);\n          console.log(results);\n        });\n      })\n      .catch((error) => {\n        setErrorMessage(error.message);\n      });\n  };\n\n  const getLists = () => {\n    console.log(JSON.parse(localStorage.getItem('currentUserIDLocalStorage')));\n    axios.get(`${API_URL_BASE}${JSON.parse(localStorage.getItem('currentUserIDLocalStorage'))}`)\n    .then((response) => {\n      const results = response.data[\"message\"];\n      setCurrentUserLists(results);\n      localStorage.setItem('currentListsLocalStorage', JSON.stringify(results))\n      console.log(JSON.parse(localStorage.getItem('currentListsLocalStorage'))[0])\n\n      return results;\n    });\n  };\n\n  const addPropertyToList = (currentUser, currentList, currentProperty, currentAddress) => { \n    axios.post(`${API_URL_BASE}${currentUser.google_id}/${currentList}/${currentProperty.meta.tracking_params.mprId}`)\n    console.log(currentUser)\n    console.log(currentList)\n    console.log(currentProperty)\n    alert('Property added!')\n    setCurrentProperty(null)\n\n    // .then((response) => {\n    //   console.log(response);\n    //   return(response)\n      // const results = response.data[\"message\"];\n      // console.log(results);\n    //   setErrorMessage('');\n    // })\n    // .catch((error) => {\n    //   // What should we do when we know the post request failed?\n    //   setErrorMessage(error.message);\n    // });\n    }\n  \n\n  // const getProperties =() => {\n  //   axios.get(`${API_URL_BASE}details/${response}`)\n  //   .then((response) => {\n  //     const results = response.data;\n  //     setCurrentProperty(results);\n  //     console.log(results);\n  //   });\n  //   .catch((error) => {\n  //   setErrorMessage(error.message);\n  //   });\n  // }\n\n  return (\n    <div>\n      <CssBaseline />\n      <Router>\n        <div>\n          <AppBar position=\"static\" style={{ background: \"#8bc34a\" }} >\n            <Toolbar>\n              <Typography\n                color=\"inherit\"\n                variant=\"h6\"\n                className={classes.title}\n              >\n                <Link to=\"/\"><HomeIcon fontSize='large' color=\"action\"/></Link> Greenacre Hub\n              </Typography>\n              <ProfileButton \n                handleLogout={handleLogout}               \n                authenticated={!authRequired}\n                profilePicture={profilePicture}\n              />\n            </Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <Button\n                aria-controls=\"fade-menu\"\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n              >\n                Menu\n              </Button>\n              <Menu\n                id=\"fade-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n              >\n                <MenuItem onClick={handleClose}>\n                  <Link to=\"/\">Home</Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                  <Link to=\"/list\"  >My Lists</Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                  <Link to=\"/AutoComplete\">Search</Link>\n                </MenuItem>\n              </Menu>\n            </IconButton>\n          </AppBar>\n\n          <main>\n            <section>\n              <Switch>\n                <Route path=\"/search\">\n                  <Search\n                    searchPropertyById={searchPropertyById}\n                    currentProperty={currentProperty}\n                  />\n                </Route>\n                <ProtectedRoute authRequired={authRequired} path=\"/list/:listId\" component={PropertyList}>\n                  <PropertyList />\n                </ProtectedRoute>\n                <ProtectedRoute authRequired={authRequired} path=\"/list\">\n                  <List getLists={getLists}/>\n                </ProtectedRoute>\n                <Route path=\"/details\">\n                  <Details currentProperty={currentProperty} />\n                </Route>\n                <Route path=\"/AutoComplete\">\n                  <AutoComplete\n                    searchPropertyById={searchPropertyById}\n                    currentProperty={currentProperty}\n                    currentPropertyId={currentPropertyId}\n                    currentUser={currentUser}\n                    getLists={getLists}\n                    currentUserLists={currentUserLists}\n                    addPropertyToList={addPropertyToList} \n                  />\n                </Route>\n                <Route path=\"/login\">\n                  {/* <Hello /> */}\n                  {/* <LoginHooks />\n                <LogoutHooks /> */}\n                  <Login\n                    authRequired={authRequired}\n                    setAuthRequired={setAuthRequired}\n                    clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n                    getLists={getLists}\n                  />\n                </Route>\n                <ProtectedRoute authRequired={authRequired} path=\"/\">\n                  <Hello\n                    setAuthRequired={setAuthRequired}\n                  />  \n                </ProtectedRoute>\n              </Switch>\n            </section>\n          </main>\n        </div>\n      </Router>\n\n      <Snackbar\n        open={logoutError}\n        autoHideDuration={10000}\n        onClose={() => showLogoutError(false)}\n      >\n        <Alert variant=\"filled\" elevated={6} severity=\"error\">\n          Couldn't log out\n        </Alert>\n      </Snackbar>\n      {/* <div className=\"App\">\n      <h2>The Components way</h2>\n      <Login />\n      <br />\n      \n\n    </div> */}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useState } from \"react\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PropTypes from \"prop-types\";\nimport Switch from \"@material-ui/core/Switch\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport axios from \"axios\";\n\nconst initialUser = {\n  listName: \"\",\n  subRows: undefined,\n};\n\nconst AddUserDialog = (props) => {\n  const [user, setUser] = useState(initialUser);\n  const { addUserHandler } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const [switchState, setSwitchState] = React.useState({\n    addMultiple: false,\n  });\n\n  const handleSwitchChange = (name) => (event) => {\n    setSwitchState({ ...switchState, [name]: event.target.checked });\n  };\n\n  const resetSwitch = () => {\n    setSwitchState({ addMultiple: false });\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    resetSwitch();\n  };\n\n  const handleAdd = (event) => {\n    addUserHandler(user);\n    setUser(initialUser);\n    switchState.addMultiple ? setOpen(true) : setOpen(false);\n    // add list to investment_lists\n    axios.post(\n      `/create/${JSON.parse(\n        localStorage.getItem(\"currentUserIDLocalStorage\")\n      )}/${user.listName}`\n    )\n    .then(function (response) {\n      props.getLists();    \n    })\n\n  };\n\n  const handleChange = (name) => ({ target: { value } }) => {\n    setUser({ ...user, [name]: value });\n  };\n\n  return (\n    <div>\n      <Tooltip title=\"Add\">\n        <IconButton aria-label=\"add\" onClick={handleClickOpen}>\n          <AddIcon />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Add List</DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText>Demo add item to react table.</DialogContentText> */}\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"List Name\"\n            type=\"text\"\n            fullWidth\n            value={user.listName}\n            onChange={handleChange(\"listName\")}\n          />\n        </DialogContent>\n        <DialogActions>\n          {/* <Tooltip title=\"Add multiple\">\n            <Switch\n              checked={switchState.addMultiple}\n              onChange={handleSwitchChange('addMultiple')}\n              value=\"addMultiple\"\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\n            />\n          </Tooltip> */}\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAdd} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nAddUserDialog.propTypes = {\n  // addUserHandler: PropTypes.func.isRequired,\n};\n\nexport default AddUserDialog;\n","import React from 'react'\n\nimport InputBase from '@material-ui/core/InputBase'\nimport { fade, makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles(theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n}))\n\nconst GlobalFilter = ({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) => {\n  const classes = useStyles()\n  const count = preGlobalFilteredRows.length\n\n  // Global filter only works with pagination from the first page.\n  // This may not be a problem for server side pagination when\n  // only the current page is downloaded.\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <InputBase\n        value={globalFilter || ''}\n        onChange={e => {\n          setGlobalFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n        }}\n        placeholder={`${count} records...`}\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        inputProps={{ 'aria-label': 'search' }}\n      />\n    </div>\n  )\n}\n\nGlobalFilter.propTypes = {\n  // preGlobalFilteredRows: PropTypes.array.isRequired,\n  // globalFilter: PropTypes.string.isRequired,\n  // setGlobalFilter: PropTypes.func.isRequired,\n}\n\nexport default GlobalFilter\n","import React from 'react'\n\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport IconButton from '@material-ui/core/IconButton'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}))\n\nconst TablePaginationActions = props => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n}\n\nexport default TablePaginationActions\n","import React from 'react'\n\nimport AddUserDialog from './AddUserDialog'\nimport clsx from 'clsx'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport GlobalFilter from './GlobalFilter'\nimport IconButton from '@material-ui/core/IconButton'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { Link, BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: \"#d0e4b9\"\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}))\n\nconst TableToolbar = props => {\n  const classes = useToolbarStyles()\n  const {\n    numSelected,\n    addUserHandler,\n    deleteUserHandler,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    globalFilter,\n  } = props\n  return (\n    <Toolbar \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {/* <AddUserDialog addUserHandler={addUserHandler} /> */}\n      <h3> Properties </h3>\n\n        <IconButton>   <Link to=\"/AutoComplete\"><AddUserDialog  /></Link></IconButton>\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          style={{ background: \"#d0e4b9\" }}\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\" onClick={deleteUserHandler}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <GlobalFilter\n          preGlobalFilteredRows={preGlobalFilteredRows}\n          globalFilter={globalFilter}\n          setGlobalFilter={setGlobalFilter}\n        />\n      )}\n    </Toolbar>\n  )\n}\n\nTableToolbar.propTypes = {\n  // numSelected: PropTypes.number.isRequired,\n  // addUserHandler: PropTypes.func.isRequired,\n  // deleteUserHandler: PropTypes.func.isRequired,\n  // setGlobalFilter: PropTypes.func.isRequired,\n  // preGlobalFilteredRows: PropTypes.array.isRequired,\n  // globalFilter: PropTypes.string.isRequired,\n}\n\nexport default TableToolbar\n","import React from \"react\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MaUTable from \"@material-ui/core/Table\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TablePaginationActions from \"./TablePaginationActions\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport TableToolbar from \"./TableToolbar\";\nimport {\n  useGlobalFilter,\n  usePagination,\n  useRowSelect,\n  useSortBy,\n  useTable,\n} from \"react-table\";\n\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <>\n        <Checkbox ref={resolvedRef} {...rest} style={{ color: \"#8bc34a\" }} />\n      </>\n    );\n  }\n);\n\nconst inputStyle = {\n  padding: 0,\n  margin: 0,\n  border: 0,\n  background: \"transparent\",\n};\n\n// Create an editable cell renderer\nconst EditableCell = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  updateMyData, // This is a custom function that we supplied to our table instance\n}) => {\n  // We need to keep and update the state of the cell normally\n  const [value, setValue] = React.useState(initialValue);\n\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  // We'll only update the external data when the input is blurred\n  const onBlur = () => {\n    updateMyData(index, id, value);\n  };\n\n  // If the initialValue is changed externall, sync it up with our state\n  React.useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  return (\n    <input\n      style={inputStyle}\n      value={value}\n      onChange={onChange}\n      onBlur={onBlur}\n    />\n  );\n};\n\nEditableCell.propTypes = {\n  cell: PropTypes.shape({\n    value: PropTypes.any.isRequired,\n  }),\n  row: PropTypes.shape({\n    index: PropTypes.number.isRequired,\n  }),\n  column: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }),\n  updateMyData: PropTypes.func.isRequired,\n};\n\n// Set our editable cell renderer as the default Cell renderer\nconst defaultColumn = {\n  Cell: EditableCell,\n};\n\nconst EnhancedTable = ({\n  columns,\n  data,\n  setData,\n  updateMyData,\n  skipPageReset,\n  listId,\n}) => {\n  const {\n    getTableProps,\n    headerGroups,\n    prepareRow,\n    page,\n    gotoPage,\n    setPageSize,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    state: { pageIndex, pageSize, selectedRowIds, globalFilter },\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      autoResetPage: !skipPageReset,\n      // updateMyData isn't part of the API, but\n      // anything we put into these options will\n      // automatically be available on the instance.\n      // That way we can call this function from our\n      // cell renderer!\n      updateMyData,\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    (hooks) => {\n      hooks.allColumns.push((columns) => [\n        // Let's make a column for selection\n        {\n          id: \"selection\",\n          // The header can use the table's getToggleAllRowsSelectedProps method\n          // to render a checkbox.  Pagination is a problem since this will select all\n          // rows even though not all rows are on the current page.  The solution should\n          // be server side pagination.  For one, the clients should not download all\n          // rows in most cases.  The client should only download data for the current page.\n          // In that case, getToggleAllRowsSelectedProps works fine.\n          Header: ({ getToggleAllRowsSelectedProps }) => (\n            <div>\n              <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n            </div>\n          ),\n          // The cell can use the individual row's getToggleRowSelectedProps method\n          // to the render a checkbox\n          Cell: ({ row }) => (\n            <div>\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n            </div>\n          ),\n        },\n        ...columns,\n      ]);\n    }\n  );\n\n  const handleChangePage = (event, newPage) => {\n    gotoPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setPageSize(Number(event.target.value));\n  };\n\n  const removeByIndexs = (array, indexs) =>\n    array.filter((_, i) => !indexs.includes(i));\n\n  const deleteUserHandler = (event) => {\n    // delete selected property from investment_list\n    // /delete/<investor_id>/<list_id>/<property_id>\n    Object.keys(selectedRowIds).map((x) =>\n      axios.post(\n        `/delete/${JSON.parse(\n          localStorage.getItem(\"currentUserIDLocalStorage\")\n        )}/${listId}/${data[x][\"property_id\"]}`\n      )\n    );\n\n    const newData = removeByIndexs(\n      data,\n      Object.keys(selectedRowIds).map((x) => parseInt(x, 10))\n    );\n    setData(newData);\n  };\n\n  const addUserHandler = (user) => {\n    const newData = data.concat([user]);\n    setData(newData);\n  };\n\n  // Render the UI for your table\n  return (\n    <TableContainer>\n      <TableToolbar\n        numSelected={Object.keys(selectedRowIds).length}\n        deleteUserHandler={deleteUserHandler}\n        addUserHandler={addUserHandler}\n        preGlobalFilteredRows={preGlobalFilteredRows}\n        setGlobalFilter={setGlobalFilter}\n        globalFilter={globalFilter}\n      />\n      <MaUTable {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <TableCell\n                  {...(column.id === \"selection\"\n                    ? column.getHeaderProps()\n                    : column.getHeaderProps(column.getSortByToggleProps()))}\n                >\n                  {column.render(\"Header\")}\n                  {column.id !== \"selection\" ? (\n                    <TableSortLabel\n                      active={column.isSorted}\n                      // react-table has a unsorted state which is not treated here\n                      direction={column.isSortedDesc ? \"desc\" : \"asc\"}\n                    />\n                  ) : null}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableHead>\n        <TableBody>\n          {page.map((row, i) => {\n            prepareRow(row);\n            return (\n              <TableRow {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <TableCell {...cell.getCellProps()}>\n                      {cell.column.id === \"thumbnail\" ? (\n                          <img src={cell.value} alt=\"thumbnail\" width = '140%' />                          \n                      ) : (\n                        cell.render(\"Cell\")\n                      )}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[\n                5,\n                10,\n                25,\n                { label: \"All\", value: data.length },\n              ]}\n              colSpan={3}\n              count={data.length}\n              rowsPerPage={pageSize}\n              page={pageIndex}\n              SelectProps={{\n                inputProps: { \"aria-label\": \"rows per page\" },\n                native: true,\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </MaUTable>\n    </TableContainer>\n  );\n};\n\nEnhancedTable.propTypes = {\n  // columns: PropTypes.array.isRequired,\n  // data: PropTypes.array.isRequired,\n  // updateMyData: PropTypes.func.isRequired,\n  // setData: PropTypes.func.isRequired,\n  // skipPageReset: PropTypes.bool.isRequired,\n};\n\nexport default EnhancedTable;\n","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport EnhancedTable from \"./EnhancedTable\";\nimport EnhancedTableList from \"./EnhancedTable\";\n\nimport axios from \"axios\";\n\nconst PropertyList = () => {\n  const { listId } = useParams();\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  useEffect(() => {\n    axios.get(`/investor_list/${listId}`).then((response) => {\n      const results = response.data[\"message\"];\n      // console.log(listId);\n      // console.log(results);\n\n      const p_list = eval(results);\n\n      // console.log(p_list);\n      const pr_list = p_list.map((p) =>\n        eval({\n          thumbnail: p.thumbnail,\n          address: p.address,\n          listing_status: p.listing_status,\n          type: p.property_type,\n          details: p.details,\n          price: p.price,\n          property_id: p.property_id,\n          rent: p.rent,\n          capRatio: p.capRatio,\n          note: p.note,\n          monthly_payment: p.monthly_payment,\n          capRatio2530: p.capRatio2530,\n        })\n      );\n      // console.log(pr_list);\n      setData(pr_list);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Thumbnail\",\n        accessor: \"thumbnail\",\n      },\n      {\n        Header: \"Address\",\n        accessor: \"address\",\n      },\n      {\n        Header: \"Price\",\n        accessor: \"price\",\n      },\n      {\n        Header: \"Type\",\n        accessor: \"type\",\n      },\n      {\n        Header: \"Listing Status\",\n        accessor: \"listing_status\",\n      },\n      {\n        Header: \"Details\",\n        accessor: \"details\",\n      },\n      {\n        Header: \"Rent\",\n        accessor: \"rent\",\n      },\n      {\n        Header: \"Cap Ratio (%)\",\n        accessor: \"capRatio\",\n      },\n      {\n        Header: \"Monthly Payment\",\n        accessor: \"monthly_payment\",\n      },\n      {\n        Header: \"25%-30y-Cap(%)\",\n        accessor: \"capRatio2530\",\n      },\n      {\n        Header: \"Note\",\n        accessor: \"note\",\n      },\n    ],\n    []\n  );\n  const [data, setData] = React.useState([]);\n  const [skipPageReset, setSkipPageReset] = React.useState(false);\n\n  // We need to keep the table from resetting the pageIndex when we\n  // Update data. So we can keep track of that flag with a ref.\n\n  // When our cell renderer calls updateMyData, we'll use\n  // the rowIndex, columnId and new value to update the\n  // original data\n  const updateMyData = (rowIndex, columnId, value) => {\n    // We also turn on the flag to not reset the page\n    setSkipPageReset(true);\n    setData((old) =>\n      old.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...old[rowIndex],\n            [columnId]: value,\n          };\n        }\n        return row;\n      })\n    );\n    if (columnId === \"rent\") {\n      const CAP = (((value * 12) / data[rowIndex][\"price\"]) * 100).toFixed(2);\n      const CAP2530 =\n        (((value - data[rowIndex][\"monthly_payment\"]) * 48 * 100) /\n        data[rowIndex][\"price\"]).toFixed(2);\n      setData((old) =>\n        old.map((row, index) => {\n          if (index === rowIndex) {\n            return {\n              ...old[rowIndex],\n              capRatio: CAP,\n              capRatio2530: CAP2530,\n            };\n          }\n          return row;\n        })\n      );\n      const property_id = data[rowIndex][\"property_id\"];\n      axios.post(\n        `/${JSON.parse(\n          localStorage.getItem(\"currentUserIDLocalStorage\")\n        )}/${property_id}/${columnId}/${value}`\n      )\n      .then(response => {\n        return axios.post(\n        `/${JSON.parse(\n          localStorage.getItem(\"currentUserIDLocalStorage\")\n        )}/${property_id}/capRatio/${CAP}`)\n        })\n        .then(response => {\n        return axios.post(\n        `/${JSON.parse(\n          localStorage.getItem(\"currentUserIDLocalStorage\")\n        )}/${property_id}/capRatio2530/${CAP2530}`)\n        })\n    }\n\n    \n\n    if (columnId === \"note\") {\n      // add notes to database\n      // @app.route(\"/<investor_id>/<property_id>/<column>/<data>\", methods=['POST'])\n      const property_id = data[rowIndex][\"property_id\"];\n      const respontse = axios.post(\n        `/${JSON.parse(\n          localStorage.getItem(\"currentUserIDLocalStorage\")\n        )}/${property_id}/${columnId}/${value}`\n      );\n      console.log(respontse);\n    }\n  };\n\n  return (\n    <div>\n      <CssBaseline />\n      {isLoaded ? (\n        <EnhancedTable\n          columns={columns}\n          data={data}\n          setData={setData}\n          updateMyData={updateMyData}\n          skipPageReset={skipPageReset}\n          listId={listId}\n        />\n      ) : (\n        \"Loading\"\n      )}\n    </div>\n  );\n};\n\nexport default PropertyList;\n"],"sourceRoot":""}